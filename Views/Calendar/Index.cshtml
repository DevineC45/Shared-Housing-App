@{
    ViewData["Title"] = "Shared Calendar";
    var currentUser = Context.Session.GetString("UserName");
}
<script>
    const currentUserName = "@currentUser";
</script>

<h2 class="mb-4">📅 Shared Calendar</h2>

<div class="mb-3">
    <a class="btn btn-primary" asp-action="Create" asp-controller="Calendar">
        ➕ Create Event
    </a>
</div>

<div id="calendar"></div>

<!-- Edit Modal -->
<div class="modal fade" id="editEventModal" tabindex="-1" aria-labelledby="editEventModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="editEventForm">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title">Edit Event</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="editEventId" />
                    <div class="mb-3">
                        <label class="form-label">Title</label>
                        <input type="text" class="form-control" id="editTitle" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Date</label>
                        <input type="date" class="form-control" id="editDate" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea class="form-control" id="editDescription" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteEventModal" tabindex="-1" aria-labelledby="deleteEventModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="deleteEventForm">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title">Delete Event</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this event?
                    <input type="hidden" id="deleteEventId" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const calendarEl = document.getElementById('calendar');

            const calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                height: 'auto',
                events: '/Calendar/GetEvents',
                dateClick: function (info) {
                    window.location.href = '/Calendar/Create';
                },
                eventDidMount: function (info) {
                    const createdBy = info.event.extendedProps.createdBy;

                    if (createdBy === currentUserName) {
                        const btnGroup = document.createElement('div');
                        btnGroup.classList.add('mt-2');

                        const editBtn = document.createElement('button');
                        editBtn.innerText = 'Edit';
                        editBtn.classList.add('btn', 'btn-sm', 'btn-outline-primary', 'me-2');
                        editBtn.onclick = function () {
                            document.getElementById('editEventId').value = info.event.id;
                            document.getElementById('editTitle').value = info.event.title.split(' - ')[0].replace(/^🛠️ |^🎉 /, '');
                            document.getElementById('editDate').value = info.event.startStr;
                            document.getElementById('editDescription').value = info.event.extendedProps.description || '';
                            new bootstrap.Modal(document.getElementById('editEventModal')).show();
                        };

                        const deleteBtn = document.createElement('button');
                        deleteBtn.innerText = 'Delete';
                        deleteBtn.classList.add('btn', 'btn-sm', 'btn-outline-danger');
                        deleteBtn.onclick = function () {
                            document.getElementById('deleteEventId').value = info.event.id;
                            new bootstrap.Modal(document.getElementById('deleteEventModal')).show();
                        };

                        btnGroup.appendChild(editBtn);
                        btnGroup.appendChild(deleteBtn);
                        info.el.appendChild(btnGroup);
                    }
                }
            });

            calendar.render();

            // 🔄 Submit Edit via AJAX
            document.getElementById('editEventForm').addEventListener('submit', function (e) {
                e.preventDefault();
                const id = document.getElementById('editEventId').value;
                const title = document.getElementById('editTitle').value;
                const date = document.getElementById('editDate').value;
                const description = document.getElementById('editDescription').value;

                fetch(`/Calendar/Edit/${id}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ id, title, date, description })
                })
                .then(response => {
                    if (response.ok) {
                        bootstrap.Modal.getInstance(document.getElementById('editEventModal')).hide();
                        calendar.refetchEvents();
                    } else {
                        alert('Error updating event.');
                    }
                });
            });

            // 🗑 Submit Delete via AJAX
            document.getElementById('deleteEventForm').addEventListener('submit', function (e) {
                e.preventDefault();
                const id = document.getElementById('deleteEventId').value;

                fetch(`/Calendar/Delete/${id}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                .then(response => {
                    if (response.ok) {
                        bootstrap.Modal.getInstance(document.getElementById('deleteEventModal')).hide();
                        calendar.refetchEvents();
                    } else {
                        alert('Error deleting event.');
                    }
                });
            });
        });
    </script>
}
