@model List<SharedHousingApp.Models.Announcement>

@{
    ViewData["Title"] = "Announcements";
    var role = (ViewData["UserRole"]?.ToString() ?? "");
}

<div class="container py-4">
    <div class="d-flex align-items-center justify-content-between mb-3">
        <h1 class="fw-bold mb-0">Announcements</h1>

        @if (role == "Landlord")
        {
            <a class="btn btn-primary" asp-action="Create">New Announcement</a>
        }
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info mb-0 text-center">No announcements yet.</div>
    }
    else
    {
        <div class="vstack gap-3">
            @foreach (var a in Model.OrderByDescending(x => x.PostedAt))
            {
                <div class="card border-0 shadow-sm rounded-3">
                    <div class="card-body">
                        <div class="d-flex align-items-start justify-content-between flex-wrap gap-2">
                            <div class="me-2">
                                <h5 class="fw-bold mb-1">@a.Title</h5>
                                <div class="text-muted small">@a.PostedAt.ToString("MMM dd, yyyy Â· HH:mm")</div>
                            </div>

                            @if (role == "Landlord")
                            {
                                <div class="d-flex gap-2">
                                    <a class="btn btn-sm btn-outline-secondary"
                                       asp-action="Edit" asp-route-id="@a.Id">Edit</a>

                                    <button type="button"
                                            class="btn btn-sm btn-danger"
                                            data-bs-toggle="modal"
                                            data-bs-target="#deleteModal"
                                            data-id="@a.Id"
                                            data-name="@a.Title"
                                            data-type="announcement">
                                        Delete
                                    </button>
                                </div>
                            }
                        </div>

                        <p class="mb-0 mt-3 text-break">@a.Content</p>
                    </div>
                </div>
            }
        </div>
    }
</div>

<!-- Reusable Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                Are you sure you want to delete <strong id="deleteItemName"></strong>?
            </div>

            <div class="modal-footer">
                <form id="deleteForm" method="post">
                    <input type="hidden" name="id" id="deleteItemId" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    const deleteModal = document.getElementById('deleteModal');
    deleteModal.addEventListener('show.bs.modal', event => {
        const button = event.relatedTarget;
        const id = button.getAttribute('data-id');
        const name = button.getAttribute('data-name');
        const type = button.getAttribute('data-type'); // "announcement"

        document.getElementById('deleteItemName').textContent = `"${name}"`;
        document.getElementById('deleteItemId').value = id;

        // Build form action e.g., /Announcements/Delete
        document.getElementById('deleteForm').action =
            `/${type.charAt(0).toUpperCase() + type.slice(1)}s/Delete`;
    });
</script>
}
